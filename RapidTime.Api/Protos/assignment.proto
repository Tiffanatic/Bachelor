syntax = "proto3";

option csharp_namespace = "RapidTime.Api";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "Protos/assignmentType.proto";
import "Protos/customer.proto";

package assignment;

service Assignment {
  rpc GetAssignment (AssignmentRequest) returns (AssignmentResponse);
  rpc GetMultiAssignment (AssignmentRequest) returns ( MultiAssignmentResponse);
  rpc GetMultiAssignmentByCustomerId (MultiAssignmentByCustomerId) returns (MultiAssignmentResponse);
  rpc GetMultiAssignmentByUserId (MultiAssignmentByUserId) returns (MultiAssignmentResponse);
  rpc CreateAssignment (CreateAssignmentRequest) returns (AssignmentResponse);
  rpc UpdateAssignment (UpdateAssignmentRequest) returns (AssignmentResponse);
  rpc DeleteAssignment (AssignmentRequest) returns (google.protobuf.Empty);
}

message CreateAssignmentRequest {
  assignmentType.AssignmentTypeResponse assignmentType = 1;
  google.protobuf.Timestamp dateStarted = 2;
  customer.CustomerResponse customer = 5;
  string UserId = 6;
}

message UpdateAssignmentRequest {
  assignmentType.AssignmentTypeResponse assignmentType = 1;
  google.protobuf.Timestamp dateStarted = 2;
  double amount = 3;
  string timeSpent = 4;
  customer.CustomerResponse customer = 5;
  int32 Id = 6;
}

message AssignmentRequest {
  int32 id = 1;
}

message MultiAssignmentByCustomerId {
  int32 CustomerId = 1;
}

message MultiAssignmentByUserId {
  string UserId = 1;
}

message AssignmentResponse {
  int32 id = 1;
  string assignmentType = 2;
  google.protobuf.Timestamp date = 3;
  double amount = 4;
  string timeSpent = 5;
  customer.CustomerResponse customer = 6;
  string UserId = 7;
}

message MultiAssignmentResponse {
  repeated AssignmentResponse assignmentResponse = 1;
}

